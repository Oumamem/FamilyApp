{% extends 'base.html.twig' %}

{% block title %}Calendrier{% endblock %}



{% block body %}
    <div class="content-grid">
    <!-- SECTION BANNER -->
    <div class="section-banner">
        <!-- SECTION BANNER ICON -->
        <img class="section-banner-icon" src="/img/banner/shopping.png" alt="forums-icon">
        <!-- /SECTION BANNER ICON -->

        <!-- SECTION BANNER TITLE -->
        <p class="section-banner-title">La calendrier de ma famille</p>
        <!-- /SECTION BANNER TITLE -->

        <!-- SECTION BANNER TEXT -->
        <p class="section-banner-text">Description</p>
        <!-- /SECTION BANNER TEXT -->
    </div>
    <!-- /SECTION BANNER -->

    <!-- SECTION HEADER -->
    <div class="section-header">
        <!-- SECTION HEADER INFO -->
        <div class="section-header-info">
            <!-- SECTION PRETITLE -->
            <p class="section-pretitle">Calendrier</p>
            <!-- /SECTION PRETITLE -->

            <!-- SECTION TITLE -->
            <h2 class="section-title">les évènements de la famille</h2>
            <!-- /SECTION TITLE -->
        </div>
        <!-- /SECTION HEADER INFO -->
    </div>
    <!-- /SECTION HEADER -->
    <div id="calendrier">
    </div>
    </div>
{% endblock %}

{% block javascripts %}

    <script>
        window.onload = () => {
            let calendarElt = document.querySelector("#calendrier")

            let calendar = new FullCalendar.Calendar(calendarElt, {
                initialView: 'timeGridWeek',
                locale: 'fr',
                timeZone: 'Europe/Paris',
                headerToolbar: {
                    start: 'prev,next today',
                    center: 'title',
                    end: 'dayGridMonth,timeGridWeek'
                },
                events: {{ data|raw }},
                editable: true,
                eventResizableFromStart: true
            })

            calendar.on('eventChange', (e) => {
                let url = `/api/${e.event.id}/edit`
                let donnees = {
                    "title": e.event.title,
                    "description": e.event.extendedProps.description,
                    "start": e.event.start,
                    "end": e.event.end,
                    "backgroundColor": e.event.backgroundColor,
                    "borderColor": e.event.borderColor,
                    "textColor": e.event.textColor,
                    "allDay": e.event.allDay
                }

                let xhr = new XMLHttpRequest

                xhr.open("PUT", url)
                xhr.send(JSON.stringify(donnees))
            })

            calendar.render()
        }
    </script>

{% endblock %}